{"name": "test_advert_modules[args0]", "status": "broken", "statusDetails": {"message": "TypeError: Object of type datetime is not JSON serializable", "trace": "self = <testcase.test_api.TestApi object at 0x7fcf71697fd0>\nargs = {'api_name': '后台创建8号位广告', 'api_request': {'headers': {'accept': 'application/json, text/plain, */*', 'user-agent': 'Mo...source': '同城活动', 'ad_type': 6, 'banner_index': 1, ...}, 'port': ':1502', ...}, 'api_validate': [{'eq': {'code': 200}}]}\n\n    @pytest.mark.parametrize('args', read_yaml_data(\"advertisement.yaml\"))\n    def test_advert_modules(self, args):\n        url = args['api_request']['url']\n        port = args['api_request']['port']\n        method = args['api_request']['method']\n        headers = args['api_request']['headers']\n        parmas = args['api_request']['parmas']\n        validate = args['api_validate']\n    \n>       res = self.httpRequest.send_request(method=method, url=url, port=port, headers=headers, data=parmas)\n\ntest_api.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../utils/ReqUtil.py:58: in send_request\n    self.last_data = json.dumps(data)\n/Users/mr.xiao/anaconda3/envs/ienv/lib/python3.7/json/__init__.py:231: in dumps\n    return _default_encoder.encode(obj)\n/Users/mr.xiao/anaconda3/envs/ienv/lib/python3.7/json/encoder.py:199: in encode\n    chunks = self.iterencode(o, _one_shot=True)\n/Users/mr.xiao/anaconda3/envs/ienv/lib/python3.7/json/encoder.py:257: in iterencode\n    return _iterencode(o, 0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.encoder.JSONEncoder object at 0x7fcf711cebd0>\no = datetime.datetime(2023, 8, 25, 0, 0)\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type datetime is not JSON serializable\n\n/Users/mr.xiao/anaconda3/envs/ienv/lib/python3.7/json/encoder.py:179: TypeError"}, "attachments": [{"name": "log", "source": "e8d2ee06-5718-48d1-b052-9d6f6de54549-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "args", "value": "{'api_name': '后台创建8号位广告', 'api_request': {'port': ':1502', 'url': '/backend/advert/admin/seg/8/create_ad_task', 'method': 'post', 'headers': {'accept': 'application/json, text/plain, */*', 'user-agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Mobile Safari/537.36'}, 'parmas': {'ad_type': 6, 'ad_position': 8, 'batch_id': '', 'imags': 'https://s1.codooncdn.com/console/internal-user/2023-08-25T14.52.24/411280xtiJgmscR3Z5yB3pAxx.jpeg!640m0,,dpi640||https://s1.codooncdn.com/console/internal-user/2023-08-25T14.52.24/411280xtiJgmscR3Z5yB3pAxx.jpeg!750m0,,dpi750||https://s1.codooncdn.com/console/internal-user/2023-08-25T14.52.24/411280xtiJgmscR3Z5yB3pAxx.jpeg!1080m0,,dpi1080', 'purposeType': 'a', 'purpose': 'a1', 'platform': 0, 'batch_type': '', 'batch_id_type': '', 'member_type': 0, 'desc': '我完全', 'ad_source': '同城活动', 'index': 1, 'href_url': '', 'begin_time_type': 0, 'needer_email': '', 'begin_time': datetime.datetime(2023, 8, 25, 0, 0), 'end_time': datetime.datetime(2023, 9, 30, 23, 59, 59), 'group_id': '', 'banner_index': 1, 'province_code': ['00'], 'city_code': [], 'sport_types': ''}}, 'api_validate': [{'eq': {'code': 200}}]}"}], "start": 1692951173232, "stop": 1692951173233, "uuid": "9833cb56-b353-472d-89ba-b62536596ac1", "historyId": "81498480effc235055767435f576092c", "testCaseId": "d5e4bcdf16e07993443ab3371de7ff11", "fullName": "testcase.test_api.TestApi#test_advert_modules", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApi"}, {"name": "host", "value": "MrdeMacBook-Pro.local"}, {"name": "thread", "value": "3277-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_api"}]}